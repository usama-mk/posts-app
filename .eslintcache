[{"E:\\webProjects\\posts-app\\src\\index.js":"1","E:\\webProjects\\posts-app\\src\\reportWebVitals.js":"2","E:\\webProjects\\posts-app\\src\\App.js":"3","E:\\webProjects\\posts-app\\src\\firebase.js":"4","E:\\webProjects\\posts-app\\src\\Pages\\ApprovePost\\ApprovePost.jsx":"5","E:\\webProjects\\posts-app\\src\\Pages\\Home\\Home.jsx":"6","E:\\webProjects\\posts-app\\src\\Pages\\CreatePost\\CreatePost.jsx":"7","E:\\webProjects\\posts-app\\src\\Pages\\Login\\Login.jsx":"8","E:\\webProjects\\posts-app\\src\\Components\\Poster\\Poster.jsx":"9","E:\\webProjects\\posts-app\\src\\Pages\\ViewImage\\ViewImage.jsx":"10","E:\\webProjects\\posts-app\\src\\Components\\Comment\\Comment.jsx":"11","E:\\webProjects\\posts-app\\src\\Pages\\ReportImage\\ReportImage.jsx":"12"},{"size":500,"mtime":1603529112201,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1603529112201,"results":"15","hashOfConfig":"14"},{"size":2201,"mtime":1607107779589,"results":"16","hashOfConfig":"14"},{"size":751,"mtime":1606940408985,"results":"17","hashOfConfig":"14"},{"size":6357,"mtime":1606397241321,"results":"18","hashOfConfig":"14"},{"size":5522,"mtime":1607109482921,"results":"19","hashOfConfig":"14"},{"size":6087,"mtime":1607104451080,"results":"20","hashOfConfig":"14"},{"size":8670,"mtime":1606178504584,"results":"21","hashOfConfig":"14"},{"size":1611,"mtime":1607257324326,"results":"22","hashOfConfig":"14"},{"size":3055,"mtime":1607257058465,"results":"23","hashOfConfig":"14"},{"size":576,"mtime":1607256959388,"results":"24","hashOfConfig":"14"},{"size":2040,"mtime":1607109243292,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"lv2kwe",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"28"},"E:\\webProjects\\posts-app\\src\\index.js",[],["57","58"],"E:\\webProjects\\posts-app\\src\\reportWebVitals.js",[],"E:\\webProjects\\posts-app\\src\\App.js",["59","60","61"],"import { Switch } from '@material-ui/core';\nimport { useEffect, useState } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport './App.css';\nimport { db, firebaseApp } from './firebase';\nimport ApprovePost from './Pages/ApprovePost/ApprovePost';\nimport CreatePost from './Pages/CreatePost/CreatePost';\nimport Home from './Pages/Home/Home';\nimport Login from './Pages/Login/Login';\nimport ReportImage from './Pages/ReportImage/ReportImage';\nimport ViewImage from './Pages/ViewImage/ViewImage';\n\nfunction App() {\n  const [user, setUser] = useState(\"\");\n  const [isAdmin, setIsAdmin]=useState(\"\")\n\n  const authListener = ()=>{\n    firebaseApp.auth().onAuthStateChanged((user)=>{\n        if(user){\n            \n            setUser(user);\n        }\n        else{\n            setUser(\"\");\n        }\n    })\n}\n \nuseEffect(()=>{\n   \n  authListener();\n  console.log(\"admin sec\")\n  var docRef = db.collection(\"Admins\").doc(\"cKbxaFUTg1KcAkgCXExa\");\n  docRef.get().then(function(doc) {\n      if (doc.exists) {\n          console.log(\"Document data:\", doc.data());\n         const adminsArray= doc.data().adminsArray;\n         adminsArray.map((admin)=>{\n            if(user.email==admin){\n                setIsAdmin(true)\n            }\n         })\n      } else {\n          // doc.data() will be undefined in this case\n          console.log(\"No such document!\");\n      }\n  }).catch(function(error) {\n      console.log(\"Error getting document:\", error);\n  });\n},[isAdmin, user])\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n       \n       <Route exact path=\"/\"  render={()=>(<Home user={user} isAdmin={isAdmin} />)} />\n       <Route exact path=\"/login\" component={Login} />\n       {user ? <Route exact path={`/createpost`} render={()=>(<CreatePost user={user} isAdmin={isAdmin} />)} />: <div></div> }\n       {user?<Route exact path=\"/approvepost\" render={()=>(<ApprovePost user={user}  />)} />: <div></div>}\n       {user?<Route exact path=\"/viewimage\" render={()=>(<ViewImage user={user}  />)} />: <div></div>}\n       {user?<Route exact path=\"/reportimage\" render={()=>(<ReportImage user={user}  />)} />: <div></div>}\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","E:\\webProjects\\posts-app\\src\\firebase.js",[],"E:\\webProjects\\posts-app\\src\\Pages\\ApprovePost\\ApprovePost.jsx",["62","63","64"],"import { Button, Card } from '@material-ui/core'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { db } from '../../firebase';\r\nimport './ApprovePost.scss'\r\n\r\nexport default function ApprovePost() {\r\n    const [unApprovedPosters, setUnApprovedPosters] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        var UNAPPROVEDPOSTS = []\r\n        const unsubscribe = db.collection('posters').onSnapshot((snapshot) => {\r\n            if (!snapshot) {\r\n                return;\r\n            }\r\n\r\n            setUnApprovedPosters(snapshot.docs.map(doc => {\r\n\r\n                // console.log(doc.data().approved)\r\n                if (!doc.data().approved) {\r\n                    return ({\r\n                        id: doc.id,        //the unique 'auto' ids\r\n                        data: doc.data()\r\n                    })\r\n\r\n                }\r\n                //the data inside the doc(coll>doc>data)\r\n            }\r\n            ))\r\n\r\n        });\r\n\r\n        //    console.log(posters[0].data.name);\r\n\r\n\r\n        return () => {      //when comp cleansup/unmount(cleansup is better), (always) detach this real time listener after it's done using it(best def)\r\n            unsubscribe();  //this is for optimization\r\n        }\r\n\r\n    }, []);\r\n\r\n    const handleApprove = (id) => {\r\n        console.log(id)\r\n        db.collection(\"posters\").doc(id).update({\r\n            approved: true\r\n        })\r\n    }\r\n    const handleDecline = (id) => {\r\n        console.log(id)\r\n        db.collection(\"posters\").doc(id).delete().then(function() {\r\n            console.log(\"Document successfully deleted!\");\r\n        }).catch(function(error) {\r\n            console.error(\"Error removing document: \", error);\r\n        });\r\n    }\r\n\r\n    const handleHomeRoute = () => {\r\n        window.location.assign(\"/\");\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"center\">\r\n                <div>\r\n                    <Button onClick={handleHomeRoute} style={{backgroundColor:\"#ffcc00\",color:\"black\", fontWeight:\"bold\"}}>Home</Button>\r\n                </div>\r\n                {\r\n                    unApprovedPosters.map((unApprovedPoster) => {\r\n                        console.log(\"hey in map while rendering\")\r\n                        console.log(unApprovedPoster)\r\n                        if (!unApprovedPoster) {\r\n                            console.log(\"no unapproved posts\")\r\n                            return;\r\n                        }\r\n                        return (\r\n                            <div style={{ margin: \"10px\" }}>\r\n\r\n                                <Card>\r\n                                    <div style={{ paddingLeft: \"4vw\", paddingRight: \"4vw\", padding: \"1vh\" }}>\r\n                                        <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems:\"center\" }}>\r\n                                           <div style={{ display: \"flex\", justifyContent: \"center\", alignItems:\"center\" }} >\r\n                                           <img style={{marginRight:\"1vw\"}} src={unApprovedPoster.data.imageUrl} alt=\"\" width=\"40\" height=\"50\" />\r\n                                          <div className=\"gridData\">\r\n                                         <div style={{display:\"flex\", flexWrap:\"wrap\"}}>\r\n                                         \r\n                                                <div class=\"grid-item\">\r\n                                                <h4 style={{color:\"white\"}}>\r\n                                               {unApprovedPoster.data.name}</h4>\r\n                                                </div>\r\n                                                <div class=\"grid-item\">\r\n                                                <h4 style={{color:\"white\"}}>\r\n                                                {unApprovedPoster.data.city}</h4>\r\n                                                </div>\r\n                                                <div class=\"grid-item\">\r\n                                                <h4 style={{color:\"white\"}}>\r\n                                                {unApprovedPoster.data.location}</h4>\r\n                                                    </div>  \r\n                                                <div class=\"grid-item\">\r\n                                                <h4 style={{color:\"white\"}}>\r\n                                                {unApprovedPoster.data.country}</h4>\r\n                                                </div>\r\n                                                <div class=\"grid-item\">\r\n                                                <h4 style={{color:\"white\"}}>\r\n                                                {unApprovedPoster.data.eventType}</h4>\r\n                                                </div>\r\n                                                <div class=\"grid-item\">\r\n                                                <h4 style={{color:\"white\"}}>\r\n                                                {unApprovedPoster.data.monthAndYear}</h4>\r\n                                                    </div>  \r\n                                                {/* <div class=\"grid-item\">7</div>\r\n                                                <div class=\"grid-item\">8</div> */}\r\n                                                  \r\n                                                 \r\n                                          \r\n                                           </div>\r\n                                         </div>\r\n                                          </div>\r\n                                           <div style={{marginLeft:\"5px\"}}>\r\n                                           <Button onClick={() => { handleApprove(unApprovedPoster.id) }} style={{backgroundColor:\"#ffcc00\",color:\"black\", fontWeight:\"bold\", margin:\"3px\"}}>Approve Post</Button>\r\n                                           <Button onClick={() => { handleDecline(unApprovedPoster.id) }} style={{backgroundColor:\"red\", color:\"white\", marginLeft:\"0.2vw\", margin:\"3px\"}}>Decline</Button>\r\n                                           </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </Card>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","E:\\webProjects\\posts-app\\src\\Pages\\Home\\Home.jsx",["65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88"],"import { Button } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Poster from '../../Components/Poster/Poster';\r\nimport { db, firebaseApp } from '../../firebase';\r\nimport logo from '../../Assets/img/esLogo.png';\r\nimport './Home.css'\r\n\r\nexport default function Home(props) {\r\n    const {user}= props;\r\n    const[posters, setPosters]= useState([]);\r\n    const[dropDownDetails, setDropDownDetails]= useState([]);\r\n   const[selectedGenre, setSelectedGenre]=useState(\"\");\r\n   const [selectedCity, setSelectedCity] = useState(\"\");\r\n    const [selectedLocation, setSelectedLocation] = useState(\"\");\r\n    const [selectedMonthAndYear, setSelectedMonthAndYear ] = useState(\"\");\r\n    const [isAdmin, setIsAdmin]=useState(\"\")\r\n    const[selectedCountry, setSelectedCountry]=useState(\"\")\r\n    const [selectedName, setSelectedName]=useState(\"\")\r\n    var  genres=[];\r\n    var cities=[];\r\n    var locations=[];\r\n    var countries=[];\r\n    var monthAndYears=[];\r\n    var names=[];\r\n  \r\n\r\n    const handleLoginRoute=(url)=>{\r\n        window.location.href=url ;\r\n    }\r\n    const handleLogout= ()=>{\r\n        firebaseApp.auth().signOut();\r\n        \r\n    }\r\n   \r\n    const handleCreatePostRoute=()=>{\r\n       window.location.assign(\"/createpost\")\r\n    }\r\n    const handleApprovePostRoute=()=>{\r\n        window.location.assign(\"/approvepost\")\r\n    }\r\n   const selectGenre=()=>{\r\n    const GENRE= document.getElementById(\"genre\").value\r\n    setSelectedGenre(GENRE);\r\n    console.log(GENRE)\r\n     \r\n   }\r\n   const selectCity=()=>{\r\n    const CITY= document.getElementById(\"city\").value\r\n    setSelectedCity(CITY);\r\n    console.log(CITY)\r\n     \r\n   }\r\n   const selectMonth=()=>{\r\n    const MONTH= document.getElementById(\"month\").value\r\n    setSelectedMonthAndYear(MONTH);\r\n    console.log(MONTH)\r\n     \r\n   }\r\n   const selectLocation=()=>{\r\n    const LOCATION= document.getElementById(\"location\").value\r\n    setSelectedLocation(LOCATION);\r\n    console.log(LOCATION)\r\n     \r\n   }\r\n   const selectName=()=>{\r\n    const NAME= document.getElementById(\"name\").value\r\n    setSelectedName(NAME);\r\n    console.log(NAME)\r\n     \r\n   }\r\n   const selectCountry=()=>{\r\n    const COUNTRY= document.getElementById(\"country\").value\r\n    setSelectedCountry(COUNTRY);\r\n    console.log(COUNTRY)\r\n     \r\n   }\r\n\r\n    \r\n   \r\n\r\n   //Getting Posters\r\n    useEffect(()=>{\r\n         \r\n        const unsubscribe = db.collection('posters').onSnapshot((snapshot)=>\r\n               {\r\n                   if(!snapshot){\r\n                       return;\r\n                   }\r\n              setPosters(snapshot.docs.map(doc =>                              \r\n                  ({\r\n                      id: doc.id,        //the unique 'auto' ids\r\n                      data: doc.data(),  //the data inside the doc(coll>doc>data)\r\n                  })\r\n                  ))\r\n               } );\r\n            //    console.log(posters[0].data.name);\r\n           \r\n               return () => {      //when comp cleansup/unmount(cleansup is better), (always) detach this real time listener after it's done using it(best def)\r\n                   unsubscribe();  //this is for optimization\r\n               }\r\n             \r\n          }, []); \r\n \r\n    return (\r\n        <div className=\"home\">\r\n            <div className=\"title\">\r\n               <div style={{marginTop:\"5vh\"}}>\r\n                   {\r\n                       user && <span style={{color:\"white\", marginTop:\"5vh\", paddingTop:\"20px\"}} >\r\n                           Logged in as: {user.email} <br/>\r\n                       </span> \r\n                   }\r\n               {\r\n                   !user && <Button onClick={()=>{handleLoginRoute(\"/login\")}}>\r\n                   <h4 style={{color:\"yellow\", backgroundColor:\"black\", padding:\"5px\", borderRadius:\"50px\"}}>Login / Create Account</h4>\r\n               </Button>\r\n               }\r\n                {\r\n                    user && <Button onClick={handleLogout}>\r\n                    <h4 style={{color:\"white\", backgroundColor:\"red\", padding:\"5px\", borderRadius:\"50px\"}}>Log Out</h4>\r\n                </Button>\r\n                }\r\n                 {\r\n                    user && <Button onClick={handleCreatePostRoute}>\r\n                    <div>\r\n                    <h4 style={{color:\"yellow\", backgroundColor:\"black\", padding:\"5px\"}}>Create Post</h4>\r\n                    </div>\r\n                </Button>\r\n                }\r\n                 \r\n               </div>\r\n              {/* <img src={logo} height=\"100px\" width=\"300px\" alt=\"logo\"/> <br/> */}\r\n              <h1 style={{display: \"inline-block\", color:\"white\", borderBottom: \"1px solid black\", }}>\r\n             Posts App\r\n              </h1>\r\n             \r\n              \r\n            </div>\r\n           \r\n            <div className=\"container\">\r\n               {\r\n                   posters.map((poster)=>{\r\n                                        \r\n                                        return <Poster  \r\n                                        key={poster.id}\r\n                                        imageUrl= {poster.data.imageUrl}\r\n                                        title={poster.data.title}\r\n                                        description={poster.data.description}\r\n                                        userEmail={poster.data.userEmail}\r\n                                        id= {poster.id}\r\n                                        />   \r\n                   })\r\n               }\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n ","E:\\webProjects\\posts-app\\src\\Pages\\CreatePost\\CreatePost.jsx",["89","90","91","92","93","94"],"import { Button, IconButton, Input, LinearProgress, TextField } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport {useForm} from 'react-hook-form';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { db, firebaseApp, storage } from '../../firebase';\r\nimport { toast } from 'react-toastify';\r\n// import '../Components/toast.css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './CreatePost.scss'\r\n\r\n\r\n\r\ntoast.configure();\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        backgroundColor: \"#3f51b5\",\r\n        // color: 'white',\r\n        margin: theme.spacing(3, 0, 2), \r\n        \r\n        '&:hover': {\r\n            backgroundColor: \"blue\",\r\n            color: 'white',\r\n            fontWeight: \"bold\"\r\n        }\r\n    },\r\n}));\r\n\r\n\r\n\r\nexport default function CreatePost(props) {\r\n    const classes= useStyles();\r\n    const isAdmin= props.isAdmin\r\n    const {register,handleSubmit, errors, reset} = useForm();\r\n    const [progress, setProgress] = useState(0);\r\n    const [file, setFile] = useState(\"\");\r\n     \r\n    \r\n    const handleHomeRoute=()=>{\r\n        window.location.assign(\"/\");\r\n    }\r\n    const onSubmit = data => {\r\n        data.userEmail= props.user.email;\r\n        const dateL= (new Date(data.monthAndYear));\r\n        var mm=(dateL.getMonth());\r\n        mm=mm+1;\r\n        var yyyy=(dateL.getFullYear());\r\n        data.monthAndYear=`${mm}/${yyyy}`\r\n        console.log(data.userEmail)\r\n        const refID = db.collection(\"posters\").doc().id;\r\n        const ref = db.collection('posters').doc(refID);  \r\n        var URL;\r\n        if(file && progress==100){\r\n            storage.ref(\"images\").child(file.name).getDownloadURL().then(url => {\r\n                URL=url;      \r\n\r\n             }).then(()=>{\r\n                 ref.set({\r\n                     userEmail: data.userEmail,\r\n                     imageUrl: URL,\r\n                     title: data.title,                  \r\n                     description: data.description,\r\n                     \r\n                 })\r\n             }).then(()=>{\r\n                 ref.update({\r\n                     imageUrl: URL\r\n                 })\r\n                 // clearEditProfile();\r\n             })\r\n\r\n             toast.success('🚀 Successfully added the data to the database ', {\r\n                position: \"bottom-center\",\r\n                autoClose: true,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                });\r\n                document.getElementById(\"input\").value = \"\";\r\n                setFile(\"\");\r\n                setProgress(0)\r\n                reset();\r\n                \r\n        }\r\n      else{\r\n        toast.warning(\"please upload an image or let it finish uploading\");\r\n      }\r\n       \r\n       \r\n    };\r\n   \r\n    const selectFileHandler = (event) => {\r\n         \r\n        if (event.target.files[0]) {\r\n            setFile(event.target.files[0]);\r\n        }\r\n    \r\n    }\r\n   \r\n    const uploadFileHandler = () => {\r\n        if(file && (progress==100)){\r\n            toast.error(\"File already uploaded\", {\r\n                position:\"bottom-center\"\r\n            })\r\n            return\r\n        }\r\n        if (file) {\r\n            const uploadTask = storage.ref(`images/${file.name}`).put(file);\r\n            uploadTask.on(\r\n                \"state_changed\",\r\n                snapshot => {\r\n                    const progress = Math.round(\r\n                        (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n                    );\r\n                    setProgress(progress);\r\n                    console.log(progress)\r\n                },\r\n                error => {\r\n                    console.log(error);\r\n                },\r\n               \r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div  className={classes.paper}>\r\n            <Button  style={{backgroundColor:\"#ffcc00\",color:\"black\", fontWeight:\"bold\"}} onClick={handleHomeRoute}>Home</Button>\r\n            <h1 style={{backgroundColor:\"black\",color:\"#ffcc00\", fontWeight:\"bold\", padding:\"10px\"}}>Create Poster</h1>\r\n            <h3 style={{backgroundColor:\"black\",color:\"white\", fontWeight:\"bold\", padding:\"5px\"}}>Upload Poster Picture</h3>\r\n              <div>\r\n              <input type=\"file\" className=\"input\" id=\"input\"  onChange={selectFileHandler}/> <br/>\r\n               <LinearProgress color=\"primary\" variant=\"determinate\" value={progress} />\r\n               <Button style={{backgroundColor:\"black\",color:\"#ffcc00\", fontWeight:\"bold\", padding:\"10px\"}} className=\"btn\"  onClick={uploadFileHandler} >Upload</Button>\r\n              </div>\r\n           <form autoComplete=\"off\" className=\"go-right\" onSubmit={handleSubmit(onSubmit)} >\r\n        \r\n  {/*  */}\r\n  <div>\r\n           <input style={{marginTop:\"10px\"}} placeholder=\"Title\"  type=\"text\"  name=\"title\"  ref={register({required: true, maxLength: 25})}/>\r\n           {errors.name && <p style={{color:\"red\"}}>You can enter max 25 characters</p> }\r\n    <label >Title</label>\r\n  </div>\r\n   \r\n  \r\n  {/*  */}\r\n  <div>\r\n    <input style={{marginTop:\"10px\"}} placeholder=\"Description\" name=\"description\" type=\"text\" ref={register({required: true, maxLength: 200})}/>\r\n    {errors.name && <p style={{color:\"red\"}}>You can enter max 200 characters</p> }\r\n    <label>Description</label>\r\n  </div>\r\n   \r\n           {/* {errors.password && <p>{errors.password.message}</p>} */}\r\n           <IconButton>\r\n           <input style={{backgroundColor:\"#f06d06\"}} className={classes.submit} type=\"submit\" value=\"Add Poster\" />\r\n\r\n           </IconButton>           </form>\r\n        </div>\r\n    )\r\n}\r\n ","E:\\webProjects\\posts-app\\src\\Pages\\Login\\Login.jsx",["95","96","97","98","99","100","101","102","103"],"import React, { useEffect, useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport firebaseApp, { provider } from '../../firebase';\r\nimport './Login.css';\r\nimport { IconButton, Input } from '@material-ui/core';\r\n \r\n \r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(3),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent:'center'\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n        height:\"100%\"\r\n        \r\n    },\r\n    submit: {\r\n        marginTop: '5px',\r\n        backgroundColor: \"#ed7d31\",\r\n        color: \"white\",\r\n       \r\n       \r\n    },\r\n    contained: {\r\n        \"&:hover\": {\r\n          backgroundColor: \"#de6310\"\r\n        }\r\n      },\r\n}));\r\n\r\n\r\nfunction Login(props) {\r\n   \r\n    const classes = useStyles();\r\n    const [user, setUser] = useState(\"\");\r\nconst [email, setEmail] = useState(\"\");\r\nconst [password, setPassword] = useState(\"\");\r\nconst [Emailerror, setEmailError] = useState(\"\");\r\nconst [passwordError, setPasswordError] = useState(\"\");\r\nconst [signup, setSignup] = useState(\"\");\r\n\r\nconst handleLogin = ()=>{\r\n    clearErrors();\r\n    firebaseApp.auth().signInWithEmailAndPassword(email, password).then(()=>{\r\n        window.location.replace(\"/\")\r\n    }).catch(error=>{\r\n        switch(error.code){\r\n            case \"auth/invalid-email\":\r\n            case \"auth/user-disabled\":\r\n            case \"auth/user-not-found\":\r\n                setEmailError(error.message);\r\n                console.log(\"error\")\r\n                break;\r\n            case \"auth/wrong-password\":\r\n                setPasswordError(error.message);\r\n                console.log(\"error\")\r\n                break;\r\n            \r\n        }\r\n    })\r\n    console.log(`user is: ${user.email}`)\r\n}\r\n\r\nconst handleLogout= ()=>{\r\n    firebaseApp.auth().signOut();\r\n    \r\n}\r\n\r\nconst authListener = ()=>{\r\n    firebaseApp.auth().onAuthStateChanged((user)=>{\r\n        if(user){\r\n            clearInputs();\r\n            setUser(user);\r\n        }\r\n        else{\r\n            setUser(\"\");\r\n        }\r\n    })\r\n}\r\n\r\nconst toggleSignup = ()=>{\r\n    setSignup(!signup);\r\n}\r\n\r\nconst handleSignup = ()=>{\r\n    firebaseApp.auth().createUserWithEmailAndPassword(email, password).then(()=>{\r\n       handleHomeRoute();\r\n    }).catch(function(error) {\r\n        // Handle Errors here.\r\n        var errorCode = error.code;\r\n        var errorMessage = error.message;\r\n        // ...\r\n      });\r\n}\r\n\r\nuseEffect(()=>{\r\n    authListener(); //on app starting check if user is available or not\r\n},[]);\r\n\r\n\r\n    const handleEmail = (e)=>{\r\n        setEmail(e.target.value); \r\n        console.log(email);\r\n   }\r\n   const handlePassword = (e)=>{\r\n    setPassword(e.target.value);\r\n     \r\n   }\r\n\r\n   const clearInputs = ()=>{\r\n    setEmail('');\r\n    setPassword('');\r\n}\r\n\r\nconst clearErrors = ()=>{\r\n  setEmailError('');\r\n  setPasswordError('');\r\n}\r\nconst loginWIthGoogle=()=>{\r\n    firebaseApp.auth().signInWithPopup(provider).then((result)=>{\r\n        //Auth changes which triggers onAuthStateChanged (in auth state change method ) and sets the user\r\n     }).then(\r\n         ()=>{\r\n             handleHomeRoute();\r\n         }\r\n     ).catch((error)=>{\r\n         alert(error.message);\r\n     })\r\n}\r\nconst handleHomeRoute=()=>{\r\n    window.location.assign(\"/\");\r\n}\r\n\r\n    return (\r\n        <div  style={{width:\"100%\", height:\"100%\", display:\"flex\", flexDirection:\"column\", justifyContent:\"center\"}}>\r\n            { \r\n            \r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n            <Button  style={{backgroundColor:\"#ffcc00\",color:\"black\", fontWeight:\"bold\"}} onClick={handleHomeRoute}>Home</Button>\r\n\r\n            <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography style={{marginBottom:\"15px\"}} component=\"h1\" variant=\"h5\">\r\n                   {signup?\"Sign up Event Scanner!\": \"Sign in Event Scanner!\"}\r\n        </Typography>\r\n                <form className={classes.form} >\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        \r\n                        required\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        label=\"Email Address\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        autoFocus\r\n                        value={email}\r\n                        onChange={handleEmail}\r\n                    />\r\n                    <p className=\"errorMsg\">{Emailerror}</p>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        \r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                        value={password}\r\n                        onChange={handlePassword}\r\n                    />\r\n                    <p className=\"errorMsg\">{passwordError}</p>\r\n                    {/* <FormControlLabel\r\n                        control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                        label=\"Remember me\"\r\n                    /> */}\r\n                  {signup?<Button\r\n                        \r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                         \r\n                        className={`${classes.submit} ${ classes.contained}`}\r\n                        onClick={handleSignup}\r\n                    >\r\n                        Sign Up\r\n          </Button>: <Button\r\n                        \r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                         \r\n                        className={`${classes.submit} ${ classes.contained}`}\r\n                        onClick={handleLogin}\r\n                    >\r\n                        Sign In\r\n          </Button> }  \r\n          <div style={{textAlign:\"center\"}}>\r\n          <h2>\r\n              OR:\r\n          </h2>\r\n          </div>\r\n          <Button style={{justifyContent:\"center\", height:\"40px\", width:\"100%\"}} size=\"small\">\r\n        <div onClick={loginWIthGoogle} style={{backgroundColor:\"white\", height:\"40px\",width:\"100%\",   display:\"flex\", justifyContent:\"center\", alignItems:\"center\" }}>\r\n            <img src=\"https://www.freepnglogos.com/uploads/google-logo-png/google-logo-icon-png-transparent-background-osteopathy-16.png\" width=\"20\" height=\"20\" style={{marginRight:\"15px\"}}  alt=\"Google Logo\"/>\r\n         <h4>\r\n              {signup?'Login with Google': 'Login with Google'}\r\n          </h4>\r\n         </div>\r\n         </Button>\r\n       \r\n                    { <Grid container>\r\n                        {/* <Grid item xs>\r\n                            <Link href=\"#\" variant=\"body2\">\r\n                                Forgot password?\r\n              </Link>\r\n                        </Grid> */}\r\n                        <Grid style={{margin:\"20px\"}} item>\r\n                            <Link onClick={toggleSignup} href=\"#\" variant=\"body2\" style={{color:\"#4b5a6c\" }} >\r\n                                {\"New user? Create Account\"}\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid> }\r\n                </form>\r\n            </div>\r\n            {/* <Box mt={8}>\r\n                <Copyright />\r\n            </Box> */}\r\n            {user && <Button onClick={handleLogout}>\r\n                    <h4 style={{color:\"red\"}}>Log Out</h4>\r\n                </Button>}\r\n        </Container>\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport default Login;","E:\\webProjects\\posts-app\\src\\Components\\Poster\\Poster.jsx",["104","105","106","107","108","109"],"E:\\webProjects\\posts-app\\src\\Pages\\ViewImage\\ViewImage.jsx",["110","111"],"E:\\webProjects\\posts-app\\src\\Components\\Comment\\Comment.jsx",[],"E:\\webProjects\\posts-app\\src\\Pages\\ReportImage\\ReportImage.jsx",["112","113"],"import { Button } from '@material-ui/core';\r\nimport React, { useState } from 'react'\r\nimport { useLocation } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { db } from '../../firebase';\r\nimport './ReportImage.scss'\r\n\r\nexport default function ReportImage(props) {\r\n    const [reportMessage, setReportMessage] = useState(\"\");\r\n    const user = props.user.email;\r\n    const location = useLocation();\r\n    const imageUrl= location.state.imageUrl;\r\n    const title = location.state.title;\r\n    const description = location.state.description;\r\n    const userEmail = location.state.userEmail;\r\n    const id = location.state.id;\r\n    const submitReport=()=>{\r\n        if(reportMessage){\r\n            db.collection('reports').add({\r\n                reportMessage: reportMessage,\r\n                reporterEmail: user,\r\n                // timeStamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                reportedImageId: id,\r\n                reportedImageTitle: title,\r\n                reportedImageUrl: imageUrl\r\n        \r\n            });\r\n            setReportMessage(\"\");\r\n            toast.success('🚀 Image Report sent ', {\r\n                position: \"bottom-center\",\r\n                autoClose: true,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                });\r\n         }\r\n    }\r\n\r\n    const handleHomeRoute=()=>{\r\n        window.location.assign(\"/\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"reportImage\">\r\n            <Button  style={{backgroundColor:\"#ffcc00\",color:\"black\", fontWeight:\"bold\", marginBottom:\"30px\"}} onClick={handleHomeRoute}>Home</Button>\r\n            <textarea rows=\"4\" cols=\"50\" onChange={(e)=>setReportMessage(e.target.value)} value={reportMessage}>\r\n            </textarea> <br/>\r\n            <Button onClick={submitReport} style={{backgroundColor:\"green\" , color:\"white\"}}>Submit Report</Button>\r\n        </div>\r\n    )\r\n}\r\n",{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":1,"column":10,"nodeType":"120","messageId":"121","endLine":1,"endColumn":16},{"ruleId":"122","severity":1,"message":"123","line":38,"column":33,"nodeType":"124","messageId":"125","endLine":38,"endColumn":35},{"ruleId":"126","severity":1,"message":"127","line":39,"column":26,"nodeType":"128","messageId":"129","endLine":39,"endColumn":28},{"ruleId":"118","severity":1,"message":"130","line":11,"column":13,"nodeType":"120","messageId":"121","endLine":11,"endColumn":28},{"ruleId":"122","severity":1,"message":"131","line":17,"column":56,"nodeType":"124","messageId":"132","endLine":17,"endColumn":58},{"ruleId":"122","severity":1,"message":"123","line":74,"column":29,"nodeType":"133","messageId":"134","endLine":74,"endColumn":36},{"ruleId":"118","severity":1,"message":"135","line":5,"column":8,"nodeType":"120","messageId":"121","endLine":5,"endColumn":12},{"ruleId":"118","severity":1,"message":"136","line":11,"column":11,"nodeType":"120","messageId":"121","endLine":11,"endColumn":26},{"ruleId":"118","severity":1,"message":"137","line":11,"column":28,"nodeType":"120","messageId":"121","endLine":11,"endColumn":46},{"ruleId":"118","severity":1,"message":"138","line":12,"column":10,"nodeType":"120","messageId":"121","endLine":12,"endColumn":23},{"ruleId":"118","severity":1,"message":"139","line":13,"column":11,"nodeType":"120","messageId":"121","endLine":13,"endColumn":23},{"ruleId":"118","severity":1,"message":"140","line":14,"column":12,"nodeType":"120","messageId":"121","endLine":14,"endColumn":28},{"ruleId":"118","severity":1,"message":"141","line":15,"column":12,"nodeType":"120","messageId":"121","endLine":15,"endColumn":32},{"ruleId":"118","severity":1,"message":"142","line":16,"column":12,"nodeType":"120","messageId":"121","endLine":16,"endColumn":19},{"ruleId":"118","severity":1,"message":"143","line":16,"column":21,"nodeType":"120","messageId":"121","endLine":16,"endColumn":31},{"ruleId":"118","severity":1,"message":"144","line":17,"column":11,"nodeType":"120","messageId":"121","endLine":17,"endColumn":26},{"ruleId":"118","severity":1,"message":"145","line":18,"column":12,"nodeType":"120","messageId":"121","endLine":18,"endColumn":24},{"ruleId":"118","severity":1,"message":"146","line":19,"column":10,"nodeType":"120","messageId":"121","endLine":19,"endColumn":16},{"ruleId":"118","severity":1,"message":"147","line":20,"column":9,"nodeType":"120","messageId":"121","endLine":20,"endColumn":15},{"ruleId":"118","severity":1,"message":"148","line":21,"column":9,"nodeType":"120","messageId":"121","endLine":21,"endColumn":18},{"ruleId":"118","severity":1,"message":"149","line":22,"column":9,"nodeType":"120","messageId":"121","endLine":22,"endColumn":18},{"ruleId":"118","severity":1,"message":"150","line":23,"column":9,"nodeType":"120","messageId":"121","endLine":23,"endColumn":22},{"ruleId":"118","severity":1,"message":"151","line":24,"column":9,"nodeType":"120","messageId":"121","endLine":24,"endColumn":14},{"ruleId":"118","severity":1,"message":"152","line":38,"column":11,"nodeType":"120","messageId":"121","endLine":38,"endColumn":33},{"ruleId":"118","severity":1,"message":"153","line":41,"column":10,"nodeType":"120","messageId":"121","endLine":41,"endColumn":21},{"ruleId":"118","severity":1,"message":"154","line":47,"column":10,"nodeType":"120","messageId":"121","endLine":47,"endColumn":20},{"ruleId":"118","severity":1,"message":"155","line":53,"column":10,"nodeType":"120","messageId":"121","endLine":53,"endColumn":21},{"ruleId":"118","severity":1,"message":"156","line":59,"column":10,"nodeType":"120","messageId":"121","endLine":59,"endColumn":24},{"ruleId":"118","severity":1,"message":"157","line":65,"column":10,"nodeType":"120","messageId":"121","endLine":65,"endColumn":20},{"ruleId":"118","severity":1,"message":"158","line":71,"column":10,"nodeType":"120","messageId":"121","endLine":71,"endColumn":23},{"ruleId":"118","severity":1,"message":"159","line":1,"column":30,"nodeType":"120","messageId":"121","endLine":1,"endColumn":35},{"ruleId":"118","severity":1,"message":"160","line":1,"column":53,"nodeType":"120","messageId":"121","endLine":1,"endColumn":62},{"ruleId":"118","severity":1,"message":"161","line":5,"column":14,"nodeType":"120","messageId":"121","endLine":5,"endColumn":25},{"ruleId":"118","severity":1,"message":"142","line":46,"column":11,"nodeType":"120","messageId":"121","endLine":46,"endColumn":18},{"ruleId":"126","severity":1,"message":"127","line":66,"column":28,"nodeType":"128","messageId":"129","endLine":66,"endColumn":30},{"ruleId":"126","severity":1,"message":"127","line":116,"column":29,"nodeType":"128","messageId":"129","endLine":116,"endColumn":31},{"ruleId":"118","severity":1,"message":"162","line":6,"column":8,"nodeType":"120","messageId":"121","endLine":6,"endColumn":24},{"ruleId":"118","severity":1,"message":"163","line":7,"column":8,"nodeType":"120","messageId":"121","endLine":7,"endColumn":16},{"ruleId":"118","severity":1,"message":"164","line":10,"column":8,"nodeType":"120","messageId":"121","endLine":10,"endColumn":11},{"ruleId":"118","severity":1,"message":"165","line":17,"column":10,"nodeType":"120","messageId":"121","endLine":17,"endColumn":20},{"ruleId":"118","severity":1,"message":"159","line":17,"column":22,"nodeType":"120","messageId":"121","endLine":17,"endColumn":27},{"ruleId":"166","severity":1,"message":"167","line":69,"column":9,"nodeType":"168","messageId":"169","endLine":81,"endColumn":10},{"ruleId":"118","severity":1,"message":"170","line":112,"column":13,"nodeType":"120","messageId":"121","endLine":112,"endColumn":22},{"ruleId":"118","severity":1,"message":"171","line":113,"column":13,"nodeType":"120","messageId":"121","endLine":113,"endColumn":25},{"ruleId":"172","severity":1,"message":"173","line":120,"column":3,"nodeType":"174","endLine":120,"endColumn":5,"suggestions":"175"},{"ruleId":"118","severity":1,"message":"176","line":3,"column":8,"nodeType":"120","messageId":"121","endLine":3,"endColumn":13},{"ruleId":"118","severity":1,"message":"177","line":4,"column":8,"nodeType":"120","messageId":"121","endLine":4,"endColumn":16},{"ruleId":"118","severity":1,"message":"178","line":6,"column":8,"nodeType":"120","messageId":"121","endLine":6,"endColumn":17},{"ruleId":"118","severity":1,"message":"179","line":13,"column":12,"nodeType":"120","messageId":"121","endLine":13,"endColumn":18},{"ruleId":"118","severity":1,"message":"180","line":13,"column":20,"nodeType":"120","messageId":"121","endLine":13,"endColumn":29},{"ruleId":"181","severity":1,"message":"182","line":40,"column":17,"nodeType":"183","endLine":40,"endColumn":85},{"ruleId":"172","severity":1,"message":"184","line":35,"column":9,"nodeType":"174","endLine":35,"endColumn":19,"suggestions":"185"},{"ruleId":"186","severity":1,"message":"187","line":71,"column":13,"nodeType":"183","endLine":71,"endColumn":71},{"ruleId":"118","severity":1,"message":"188","line":14,"column":11,"nodeType":"120","messageId":"121","endLine":14,"endColumn":22},{"ruleId":"118","severity":1,"message":"189","line":15,"column":11,"nodeType":"120","messageId":"121","endLine":15,"endColumn":20},"no-native-reassign",["190"],"no-negated-in-lhs",["191"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'UNAPPROVEDPOSTS' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","ReturnStatement","expectedReturnValue","'logo' is defined but never used.","'dropDownDetails' is assigned a value but never used.","'setDropDownDetails' is assigned a value but never used.","'selectedGenre' is assigned a value but never used.","'selectedCity' is assigned a value but never used.","'selectedLocation' is assigned a value but never used.","'selectedMonthAndYear' is assigned a value but never used.","'isAdmin' is assigned a value but never used.","'setIsAdmin' is assigned a value but never used.","'selectedCountry' is assigned a value but never used.","'selectedName' is assigned a value but never used.","'genres' is assigned a value but never used.","'cities' is assigned a value but never used.","'locations' is assigned a value but never used.","'countries' is assigned a value but never used.","'monthAndYears' is assigned a value but never used.","'names' is assigned a value but never used.","'handleApprovePostRoute' is assigned a value but never used.","'selectGenre' is assigned a value but never used.","'selectCity' is assigned a value but never used.","'selectMonth' is assigned a value but never used.","'selectLocation' is assigned a value but never used.","'selectName' is assigned a value but never used.","'selectCountry' is assigned a value but never used.","'Input' is defined but never used.","'TextField' is defined but never used.","'firebaseApp' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Box' is defined but never used.","'IconButton' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'errorCode' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'authListener'. Either include it or remove the dependency array.","ArrayExpression",["192"],"'bgImg' is defined but never used.","'Lightbox' is defined but never used.","'ViewImage' is defined but never used.","'isOpen' is assigned a value but never used.","'setIsOpen' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["193"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'description' is assigned a value but never used.","'userEmail' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},"Update the dependencies array to be: [authListener]",{"range":"198","text":"199"},"Update the dependencies array to be: [id, location]",{"range":"200","text":"201"},[3400,3402],"[authListener]",[1346,1356],"[id, location]"]